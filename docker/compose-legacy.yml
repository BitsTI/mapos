name: map-os

services:
  nginx:
    image: nginx:alpine
    container_name: mapos-nginx
    volumes:
      - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "../:/var/www/html"
      - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
    ports:
      - ${MAPOS_PORT:-8090}:80
    env_file:
      - path: ./env/production.env
        required: true
    command: /bin/sh -c "envsubst 'localhost $$MAPOS_PORT' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: unless-stopped
    depends_on:
      - php-fpm
      - mysql

  php-fpm:
    container_name: mapos-php-fpm
    build:
      context: ./etc/php
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "./etc/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
      - "../:/var/www/html"

  composer:
    container_name: mapos-composer
    build:
      context: ./etc/composer
      dockerfile: Dockerfile
    volumes:
      - "../:/app"
    command: install --ignore-platform-reqs --no-scripts

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: mapos-phpmyadmin
    ports:
      - ${PHPMYADMIN_PORT}:80
    env_file:
      - path: ./env/production.env
        required: true
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_PASSWORD}
    restart: unless-stopped
    depends_on:
      - mysql

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mapos-mysql
    restart: unless-stopped
    env_file:
      - path: ./env/production.env
        required: true
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./data/mysql:/var/lib/mysql
